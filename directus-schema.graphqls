"""
A directive used by the Apollo iOS client to annotate operations or fragments that should be used exclusively for generating local cache mutations instead of as standard operations.
"""
directive @apollo_client_ios_localCacheMutation on QUERY | MUTATION | SUBSCRIPTION | FRAGMENT_DEFINITION

type Query {
  me: Me
  timers(startsAt: String!, endsAt: String!): [Timers]
  projects: [Projects]
  tasks(projectId: Int!): [Tasks]
  stats(date: String!): Stats
}

type Me {
  email: String
}

type Timers {
  id: Int
  startsAt: String
  endsAt: String
  duration: Int
  totalDuration: Int
  notes: String
  project: Project
  task: Task
}

type Project {
  id: Int
  name: String
}

type Task {
  id: Int
  name: String
}

type Projects {
  id: String
  projectName: String
}

type Tasks {
  id: String
  taskName: String
}

type Stats {
  byDate: [ByDate]
  byInterval: [ByInterval]
}

type ByDate {
  date: String
  totalDuration: Int
}

type ByInterval {
  type: String
  startsAt: String
  endsAt: String
  totalDuration: Int
}

type Mutation {
  start(projectTaskId: Int!, duration: Int, notes: String): Start
  stop(timerId: Int!): Stop
  log(projectTaskId: Int!, duration: Int, notes: String, startsAt: String, endsAt: String): Log
  remove(timerId: Int!): Remove
  update(timerId: Int!, input: Input): Update
  restart(timerId: Int!): Restart
}

type Start {
  id: String
  startsAt: String
  endsAt: String
  totalDuration: Int
}

type Stop {
  id: String
  startsAt: String
  endsAt: String
  totalDuration: Int
}

type Log {
  id: String
  startsAt: String
  endsAt: String
  totalDuration: Int
}

type Remove {
  id: Int
}

type Update {
  id: Int
  startsAt: String
  endsAt: String
  totalDuration: Int
}

input Input {
  duration: Int
  startsAt: String
  endsAt: String
  notes: String
}

type Restart {
  id: Int
  startsAt: String
  endsAt: String
  totalDuration: Int
}